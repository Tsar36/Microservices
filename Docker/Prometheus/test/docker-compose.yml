version: '3.8'

volumes:
  prom_data: {}
  prom-configs: {}
  grafana-configs: {}
  grafana_data: {}
  alertmanager-data: {}

networks:
  my_network:
    driver: bridge

services:

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
#      - '--alertmanager.url=http://alertmanager:9093'
    ports:
      - "9090:9090"
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    networks:
      - my_network
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
      - prom-configs:/etc/prometheus
    labels:
      org.label-schema.group: "Monitoring for TEST containers"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - my_network
    restart: unless-stopped
    env_file:
      - user.config
    volumes:
      - grafana_data:/var/lib/grafana
      - grafana-configs:/etc/grafana

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - my_network
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude'
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    labels:
      org.label-schema.group: "Monitoring for TEST containers"

  cadvisor:
#    platform: linux/amd64
    image: google/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8080:8080"
    networks:
      - my_network
    restart: always
    labels:
      org.label-schema.group: "Monitoring for TEST containers"

  alertmanager:
    image: prom/alertmanager:v0.23.0
    container_name: alertmanager
    volumes:
      - "./alertmanager/:/etc/alertmanager/"
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: always
    ports:
      - "9093:9093"
    networks:
      - my_network
    labels:
      org.label-schema.group: "Monitoring for TEST containers"
